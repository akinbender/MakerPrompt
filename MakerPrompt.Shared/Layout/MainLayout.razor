@inherits LayoutComponentBase
@implements IDisposable

<header class="navbar sticky-top bg-body-secondary text-body flex-md-nowrap p-0 shadow">
    <a href="/" class="navbar-brand bg-body-tertiary col-md-3 col-lg-2 d-flex align-items-center me-0 px-2">
            <img class="ms-2" width="40" height="32" aria-hidden="true" src="_content/MakerPrompt.Shared/logo.svg" />
            <span>MakerPrompt</span>
        </a>
    <button class="navbar-toggler position-absolute d-md-none collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <NavConnection />
</header>

<div class="container-fluid">
    <div class="row">
        <NavMenu />
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">@TitleService.CurrentTitle</h1>
            </div>
            <div class="row">
                <div class="col-lg-7 col-md-12">
                    @Body
                </div>
                <div class="col-lg-5 col-md-12">
                    <CommandPrompt />
                </div>
            </div>
        </main>
    </div>
</div>

@code {
    [Inject]
    private LocalizedTitleService TitleService { get; set; } = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        TitleService.OnTitleChanged += HandleTitleChanged;
    }

    private void HandleTitleChanged()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        TitleService.OnTitleChanged -= HandleTitleChanged;
    }
}
